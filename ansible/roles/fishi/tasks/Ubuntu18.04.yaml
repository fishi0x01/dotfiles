---
- name: Install easy Packages
  apt:
    name: "{{ simple_packages }}"
    force_apt_get: yes
    state: present
    update_cache: yes

#################
# Wireshark Setup
#################
- name: Install Wireshark
  apt:
    name:
     - "wireshark"
    state: present
    force_apt_get: yes
    update_cache: yes

- name: Add wireshark group
  group:
    name: "wireshark"
    state: present

- name: Add user to Wireshark Group
  user:
    name: "{{ machine_user }}"
    append: yes
    groups: wireshark

#########
# Keybase
#########
- name: Install keybase
  apt:
    deb: "https://prerelease.keybase.io/keybase_amd64.deb"
    state: present
    force_apt_get: yes

##############
# Docker Setup
##############
- name: Add docker repo key
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add docker repo
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
    state: present

- name: Install docker-ce
  apt:
    name: "docker-ce"
    update_cache: yes
    force_apt_get: yes
    state: present

- name: Configure docker-ce
  template:
    src: "templates/docker-daemon.json"
    dest: "/etc/docker/daemon.json"
    owner: "root"
    group: "root"
    mode: "644"
  notify: 
    - "restart docker"

#############
# sysctl.conf
#############
- name: Configure inotify limits
  template:
    src: "templates/sysctl.d.inotify.conf"
    dest: "/etc/sysctl.d/10-inotify.conf"
    owner: "root"
    group: "root"
    mode: "644"
  notify: 
    - "reload sysctl"

#################
# Firefox Sandbox
#################
- name: Configure firefox sandbox desktop
  copy:
    src: files/ff-sandbox.desktop
    dest: "/home/{{ machine_user }}/Desktop/ff-sandbox.desktop"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: "755"

- name: Configure firefox sandbox icon
  copy:
    src: files/ff-sandbox.png
    dest: "/home/{{ machine_user }}/.local/share/icons/ff-sandbox.png"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: "444"

#########
# SMB
#########
- name: Ensure samba conf dir exists (avoid rpcclient errors)
  file: 
    path: "/etc/samba/"
    state: directory

- name: Ensure samba conf file exists (avoid rpcclient errors)
  file: 
    path: "/etc/samba/smb.conf"
    state: touch

########
# Rust
########
# Script from https://sh.rustup.rs
- name: Install rust
  become: yes
  become_user: "{{ machine_user }}"
  script: "files/rustup-init.sh -y"

###########
# Alacritty
###########
- name: Get alacritty deb
  get_url:
    url: https://github.com/alacritty/alacritty/releases/download/v0.4.1/Alacritty-v0.4.1-ubuntu_18_04_amd64.deb
    dest: /tmp/alacritty.deb
    checksum: sha256:cb8320d3f5c75349bf6197a6c24a2ee35701d4e06d34515972414f065526557e

- name: Install alacritty
  apt:
    deb: /tmp/alacritty.deb

- name: Set alacritty.desktop
  copy:
    src: files/alacritty.desktop
    dest: "/home/{{ machine_user }}/Desktop/alacritty.desktop"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    mode: '0755'

# Set bash as default shell
- name: Bash as default shell
  user:
    name: "{{ machine_user }}"
    shell: /bin/bash
